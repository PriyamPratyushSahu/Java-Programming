6. Binary Tree:

6.1. Inorder Tree Traversal
6.2. Preorder Tree Traversal
6.3. Postorder Tree Traversal
6.4. Check if two binary trees are identical or not
6.5. Print bottom view of a binary tree
6.6. Print top view of a binary tree
6.7. In-place convert a binary tree to its sum tree
6.8. Determine whether the given binary tree nodes are cousins of each other
6.9. Print cousins of a given node in a binary tree
6.10. Check if a binary tree is a sum tree or not
6.11. Combinations of words formed by replacing given numbers with corresponding alphabets
6.12. Determine whether a binary tree is a subtree of another binary tree
6.13. Find the diameter of a binary tree
6.14. Check if a binary tree is symmetric or not
6.15. Convert a binary tree to its mirror
6.16. Determine if a binary tree can be converted to another by doing any number of swaps of children
6.17. Find the Lowest Common Ancestor (LCA) of two nodes in a binary tree
6.18. Print all paths from the root to leaf nodes of a binary tree
6.19. Find ancestors of a given node in a binary tree
6.20. Find distance between given pairs of nodes in a binary tree
6.21. Find the diagonal sum of a binary tree
6.22. Sink nodes containing zero to the bottom of a binary tree
6.23. Convert a binary tree to a full tree by removing half nodes
6.24. Truncate a binary tree to remove nodes that lie on a path having a sum less than k
6.25. Find maximum sum root to leaf path in a binary tree
6.26. Check if a binary tree is height-balanced or not
6.27. Convert binary tree to Left-child right-sibling binary tree
6.28. Print all paths from leaf to root node of a binary tree
6.29. Find all nodes at a given distance from leaf nodes in a binary tree
6.30. Count all subtrees having the same value of nodes in a binary tree
6.31. Find the maximum difference between a node and its descendants in a binary tree
6.32. Find the maximum sum path between two leaves in a binary tree
6.33. Construct a binary tree from inorder and preorder traversal
6.34. Construct a binary tree from inorder and postorder traversals
6.35. Construct a binary tree from inorder and level order sequence
6.36. Construct a full binary tree from the preorder sequence with leaf node information
6.37. Construct a full binary tree from a preorder and postorder sequence
6.38. Find postorder traversal of a binary tree from its inorder and preorder sequence
6.39. Set next pointer to the inorder successor of all nodes in a binary tree
6.40. Find preorder traversal of a binary tree from its inorder and postorder sequence
6.41. Find difference between sum of all nodes present at odd and even levels in a binary tree
6.42. Clone a binary tree with random pointers
6.43. Threaded Binary Tree ? Overview and Implementation
6.44. Determine if a binary tree satisfies the height-balanced property of a red?black tree
6.45. Construct an ancestor matrix from a binary tree
6.46. Find all possible binary trees having the same inorder traversal
6.47. Perform boundary traversal on a binary tree
6.48. Check if each node of a binary tree has exactly one child
6.49. Evaluate a Binary Expression Tree
6.50. Construction of an expression tree
6.51. Fix children-sum property in a binary tree
6.52. Maximum path sum in a binary tree
6.53. Create a mirror of an m?ary tree
6.54. Print a two-dimensional view of a binary tree
6.55. Construct a Cartesian tree from an inorder traversal
6.56. Calculate the height of a binary tree with leaf nodes forming a circular doubly linked list
6.57. Link nodes present in each level of a binary tree in the form of a linked list
6.58. Convert a ternary tree to a doubly-linked list
6.59. Extract leaves of a binary tree into a doubly-linked list
6.60. Find the vertical sum of a binary tree
6.61. In-place convert a binary tree to a doubly-linked list
6.62. Check whether the leaf traversal of given binary trees is the same or not
6.63. Efficiently print all nodes between two given levels in a binary tree
6.64. Calculate the height of a binary tree
6.65. Delete a binary tree
6.66. Level order traversal of a binary tree
6.67. Spiral order traversal of a binary tree
6.68. Reverse level order traversal of a binary tree
6.69. Print left view of a binary tree
6.70. Find the next node at the same level as the given node in a binary tree
6.71. Check if a binary tree is a complete binary tree or not
6.72. Print diagonal traversal of a binary tree
6.73. Invert Binary Tree
6.74. Convert a binary tree into a doubly-linked list in spiral order
6.75. Check if a binary tree is a min-heap or not
6.76. Invert alternate levels of a perfect binary tree
6.77. Perform vertical traversal of a binary tree
6.78. Compute the maximum number of nodes at any level in a binary tree
6.79. Print right view of a binary tree
6.80. Find the minimum depth of a binary tree
6.81. Print nodes of a binary tree in vertical order